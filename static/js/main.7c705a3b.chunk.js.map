{"version":3,"sources":["components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","type","onChange","Component","Filter","onChangeFilter","ContactListItem","contact","onDeleteContact","onClick","id","ContactList","contacts","map","key","App","filter","changeFilter","data","addContact","shortid","generate","find","alert","localStorage","getItem","prevState","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c705a3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.name || !this.state.number) {\r\n            return;\r\n          }\r\n        this.props.onSubmitData ({ ...this.state });\r\n        this.reset();\r\n    }\r\n    reset () {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n              <form onSubmit={this.handleSubmit}>\r\n                <h2>Name</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    value={name}\r\n                    name=\"name\"\r\n                    onChange={this.handleChange} \r\n                />\r\n                <h2>Number</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"number\" \r\n                    value={number}\r\n                    onChange={this.handleChange} \r\n                />\r\n                <p></p>\r\n                <button type=\"submit\"> Add new contact </button>\r\n            </form>\r\n        );        \r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmitData: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onChangeFilter}) => (\r\n    <>\r\n        <p>Find contacts by name</p>\r\n        <input name = \"filter\" onChange={onChangeFilter} value = {value}/>\r\n    </>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact })=> (\r\n    <> \r\n        <span>\r\n            {contact.name}: {contact.number}\r\n        </span>\r\n        <button onClick= {()=>onDeleteContact(contact.id)}>Delete</button>\r\n    </>\r\n)\r\n\r\n\r\nContactListItem.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact}) => {\r\n    return(\r\n        <ul>\r\n            {contacts.map(contact => (\r\n                <li key = {contact.id}>\r\n                    <ContactListItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from \"./ContactList\";\nimport shortid from 'shortid';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nclass App extends Component {\n    state = {\n      contacts: [],\n      filter: ''\n    }\n\n    componentDidMount(){\n      if (localStorage.getItem(\"contacts\")) {\n        this.setState ( prevState => ({\n          contacts: [...JSON.parse(localStorage.getItem(\"contacts\"))]          \n        }\n      ))}\n    };\n\n    componentDidUpdate(prevProps, prevState){\n      if (prevState.contacts !== this.state.contacts) {\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n      }\n    };\n  \n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n  \n  onSubmitData = (data) => {\n    const { contacts } = this.state;\n\n    const addContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (contacts.find(contact => contact.name === addContact.name)) {\n      alert(`${addContact.name} is already in contacts!`);\n      return;\n    }\n    this.setState({\n      contacts: [...contacts, addContact],\n    });\n  };\n\n  render () {\n    const { contacts, filter }= this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <>\n        <h1>Phonebook</h1>\n\n        <ContactForm onSubmitData={this.onSubmitData} /> \n        {contacts.length !==0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteContact} />\n          </>\n        )}\n        \n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n \nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}